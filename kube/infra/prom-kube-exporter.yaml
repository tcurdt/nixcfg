apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: infra
  name: prom-kube-exporter
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prom-kube-exporter-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prom-kube-exporter
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: prom-kube-exporter
  - kind: ServiceAccount
    namespace: default
    name: prom-kube-exporter
  - kind: ServiceAccount
    namespace: infra
    name: prom-kube-exporter
  - kind: ServiceAccount
    namespace: live
    name: prom-kube-exporter
  - kind: ServiceAccount
    namespace: test
    name: prom-kube-exporter
---
apiVersion: v1
kind: ServiceAccount
# automountServiceAccountToken: false
metadata:
  namespace: infra
  name: prom-kube-exporter
---
apiVersion: v1
kind: Service
metadata:
  namespace: infra
  name: prom-kube-exporter
  # annotations:
  #   prometheus.io/scrape: 'true'
  #   prometheus.io/port: '8080'
spec:
  # clusterIP: None
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  - name: telemetry
    port: 8081
    targetPort: telemetry
  selector:
    app: prom-kube-exporter
# ---
# apiVersion: apps/v1
# kind: DaemonSet
# spec:
#   template:
#     spec:
#       containers:
#       - name: prom-kube-exporter
#         image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.3.0
#         args:
#           - --resources=pods,cronjobs
#           # - --resources=pods,nodes,services,endpoints,statefulsets,daemonsets,deployments,replicasets,cronjobs,jobs
#           - --node=$(NODE_NAME)
#         ports:
#           - name: metrics
#             containerPort: 8080
#           - name: telemetry
#             containerPort: 8081
#         livenessProbe:
#           httpGet:
#             path: /healthz
#             port: 8080
#           initialDelaySeconds: 5
#           timeoutSeconds: 5
#         readinessProbe:
#           httpGet:
#             path: /
#             port: 8081
#           initialDelaySeconds: 5
#           timeoutSeconds: 5
#         resources:
#           requests:
#             # cpu: 100m
#             memory: 100Mi
#           limits:
#             # cpu: 250m
#             memory: 200Mi
#         securityContext:
#           allowPrivilegeEscalation: false
#           readOnlyRootFilesystem: true
#           runAsUser: 65534
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: infra
  name: prom-kube-exporter
  labels:
    app: prom-kube-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prom-kube-exporter
  template:
    metadata:
      labels:
        app: prom-kube-exporter
    spec:
      # automountServiceAccountToken: true
      serviceAccountName: prom-kube-exporter
      containers:
      - name: prom-kube-exporter
        image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.3.0
        args:
          - --resources=pods,cronjobs
          # - --resources=pods,nodes,services,endpoints,statefulsets,daemonsets,deployments,replicasets,cronjobs,jobs
          - --node=$(NODE_NAME)
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
          - name: metrics
            containerPort: 8080
          - name: telemetry
            containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          requests:
            # cpu: 100m
            memory: 100Mi
          limits:
            # cpu: 250m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 65534

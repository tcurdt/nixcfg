apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-volume
  labels:
    app: grafana
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  hostPath:
    path: /srv/volumes/grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: infra
  name: grafana-volume-claim
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  # persistentVolumeReclaimPolicy: Retain
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: infra
  name: grafana
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
  selector:
    app: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: infra
  name: grafana-datasources
  annotations:
    internal.config.kubernetes.io/needsHashSuffix: enabled
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus:9090
        isDefault: true
      - name: Loki
        type: loki
        url: http://loki:3100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: infra
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      # initContainers:
      #  - name: grafana-chown-data
      #    image: busybox
      #    imagePullPolicy: IfNotPresent
      #    command: ["chown", "-R", "472:472", "/data"]
      #    volumeMounts:
      #     - name: grafana-storage
      #       mountPath: /data
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        # runAsUser: 0
        # runAsUser: 472
        # runAsGroup: 472
        # fsGroup: 472
        # fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: grafana
          image: grafana/grafana-oss:11.0.0
          env:
            - name: GF_LOG_LEVEL
              value: error
          ports:
            - name: grafana
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: grafana
          resources:
            requests:
              # cpu: 100m
              memory: 100Mi
            limits:
              # cpu: 200m
              memory: 200Mi
          securityContext:
            # readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            # - name: grafana-dashboards
            #   mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        # - name: grafana-dashboards
        #   configMap:
        #     name: grafana-dashboards
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-volume-claim

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: infra
  name: prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - endpoints
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-binding
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: infra
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: infra
  name: prometheus
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-volume
  labels:
    app: prometheus
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  hostPath:
    path: /srv/volumes/prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: infra
  name: prometheus-volume-claim
  labels:
    app: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: infra
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
    scrape_configs:
      - job_name: node
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'prom-node-exporter'
          action: keep
      - job_name: push
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'prom-push-exporter'
          action: keep
      - job_name: kube
        static_configs:
          - targets:
            - prom-kube-exporter:8080
      - job_name: cadvisor
        static_configs:
          - targets:
            - prom-cadvisor-exporter:8080
      # - job_name: postgres
      #   static_configs:
      #     - targets:
      #       - prom-postgres-exporter:9187
      #   relabel_configs:
      #     - source_labels: [__address__]
      #       target_label: __param_target
      #     - source_labels: [__param_target]
      #       target_label: instance
      #     - target_label: __address__
      #       replacement: 127.0.0.1:9187
      # - job_name: mysql
      #   static_configs:
      #     - targets:
      #       - prom-mysql-exporter:3306
      #   relabel_configs:
      #     - source_labels: [__address__]
      #       target_label: __param_target
      #     - source_labels: [__param_target]
      #       target_label: instance
      #     - target_label: __address__
      #       # The mysqld_exporter host:port
      #       replacement: localhost:9104
  datasource.yml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: https://127.0.0.1:9090
---
apiVersion: v1
kind: Service
metadata:
  namespace: infra
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
    - port: 9090
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: infra
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.52.0
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --log.level=error
          ports:
            - name: prometheus
              containerPort: 9090
          resources:
            requests:
              memory: 100Mi
            limits:
              memory: 200Mi
          readinessProbe:
            httpGet:
              path: /metrics
              port: prometheus
          livenessProbe:
            httpGet:
              path: /metrics
              port: prometheus
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-volume-claim
